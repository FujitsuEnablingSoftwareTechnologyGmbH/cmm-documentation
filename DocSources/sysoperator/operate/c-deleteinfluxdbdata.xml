<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright FUJITSU ENABLING SOFTWARE TECHNOLOGY GMBH 2018 -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>

<concept id="concept_E8D43EB4494E41D2AB42D4A89396D1AB"
                    xml:lang="en-us">
    <title>Removing Metrics Data</title>
    <conbody>
        <section>
            <p>Metrics data is stored in the Metrics and Alarms InfluxDB Database. InfluxDB features an SQL-like query language for querying data and performing aggregations on that data.</p>
            <p>The Metrics Agent configuration defines the metrics and types of measurement for which data is stored. For each measurement, a so-called series is written to the InfluxDB database. A series consists of a timestamp, the metrics, and the value measured.</p>
            <p>Example: </p>
            <fig>
                <image alt="CSI_Influxdb.png" height="79" href="../../images/cmm-influxdb.png" width="252"/>
            </fig>
            <p>Every series can be assigned key tags. In the case of <ph
                    conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                    />, this is the <codeph>_tenant_id</codeph> tag. This tag identifies the OpenStack project for which the metrics data has been collected. </p>
            <p>From time to time, you may want to delete outdated or unnecessary metrics data from the Metrics and Alarms Database, for example to save space or remove data for metrics you are no longer interested in. To delete data, you use the InfluxDB command line interface, the interactive shell that is provided for the InfluxDB database.</p>
            <p>Proceed as follows to delete metrics data from the database: </p>
            <p>
                <ol>
                    <li>
                        <p>Create a backup of the database. For details, refer to <xref
                                href="c-backup.xml"/>.</p>
                    </li>
                    <!-- li>
                        <p>Determine the ID of the OpenStack project for the data to be deleted. For this purpose, create a configuration file for defining environment variables:</p>
                        <codeblock>vim .keystone-connect-e.env</codeblock>
                        <p>Define the following variables in <codeph>.keystone-connect-e.env</codeph>:</p>
                        <codeblock>-e OS_PROJECT_DOMAIN_NAME=Default -e OS_USER_DOMAIN_NAME=Default 
  -e OS_PROJECT_NAME=admin -e OS_USERNAME=admin 
  -e OS_PASSWORD=secretadmin -e OS_AUTH_URL=http://localhost:35357/v3 
  -e OS_IDENTITY_API_VERSION=3 -e OS_IMAGE_API_VERSION=2             </codeblock>
                        <p>Connect to the working Keystone container and list the existing projects:</p>
                        <codeblock>docker exec -it `cat .keystone-connect-e.env` monascadocker_keystone_1 openstack project list</codeblock>
                        <p>The following response is displayed.</p>
                        <p>Example: </p>
                        <codeblock>+##################+
| ID                               | Name     |
+####+
| 0c11d9e9029841958544794f05e71d04 | demo     |
| c83cad8eb14a4adabd3da45f715f57c0 | monasca  |
+###+</codeblock>
                        <p>The <codeph>monasca</codeph> project is initially relevant for metrics and alarms management. All metrics data related to <ph
                                conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                            /> and the OpenStack services are assigned to this project.</p>
                        <p>In the course of the productive operation of <ph
                                conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                            />, additional projects may be created, for example, for application operators.</p>
                        <p>The <b>ID</b> column shows the relevant tenant ID. </p>
                    </li -->
                    <li>
                        <p>Log in to the <ph conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                            /> node as a user with root privileges.</p>
                    </li>
                    <li>
                        <p>For connecting to InfluxDB, you need to know the ID or name of the container in which the database is running:</p>
                        <codeblock>docker ps | grep influxd</codeblock>
                        <p>Example output with <codeph>c6be4ebebefe</codeph> as container ID and <codeph>monascadocker_influxdb_1</codeph> as container name: </p>
                        <codeblock>c6be4ebebefe   influxdb:1.3.4-alpine   "/entrypoint.sh inflâ€¦"   
19 hours ago  Up 6 seconds   8086/tcp   monascadocker_influxdb_1</codeblock>
                    </li>
                    <li>
                        <p>Connect to InfluxDB as follows: </p>
                        <codeblock># docker exec -it &lt;container_id> /bin/sh
# influx</codeblock>
                        <p>Replace <codeph>&lt;container_id></codeph> by the ID or name of the container in which the database is running:</p>
                        <p>The output of this command is, for example, as follows: </p>
                        <codeblock>Connected to http://localhost:8086 version 1.3.3
InfluxDB shell version: 1.3.3</codeblock>
                    </li>
                    <li>
                        <p>Connect to the InfluxDB database of <ph
                                conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                                /> (<codeph>mon</codeph>): </p>
                        <codeblock>&gt; show databases
name: databases
name
----
mon
_internal

&gt; use mon
Using database mon</codeblock>
                    </li>
                    <li>
                        <p>Check the outdated or unnecessary data to be deleted.</p>
                        <ul>
                            <li>
                                <p>You can view all measurements for a specific project as follows: </p>
                                <p>
                                    <codeblock>SHOW MEASUREMENTS WHERE _tenant_id = '&lt;project ID&gt;'</codeblock>
                                </p>
                            </li>
                            <li>
                                <p>You can view the series for a specific metrics and project, for example, as follows: </p>
                                <p>
                                    <codeblock>SHOW SERIES FROM "cpu.user_perc" WHERE _tenant_id = '&lt;project ID&gt;'</codeblock>
                                </p>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <p>Delete the desired data.</p>
                        <ul>
                            <li>
                                <p>When a project is no longer relevant or a specific tenant is no longer used, delete all series for the project as follows:</p>
                                <codeblock>DROP SERIES WHERE _tenant_id = '&lt;project ID&gt;'</codeblock>
                                <p>Example: </p>
                                <codeblock>DROP SERIES WHERE _tenant_id = '27620d7ee6e948e29172f1d0950bd6f4'</codeblock>
                            </li>
                            <li>
                                <p>When a metrics is no longer relevant for a project, delete all series for the specific project and metrics as follows: </p>
                                <codeblock>DROP SERIES FROM "&lt;metrics&gt;" WHERE _tenant_id = '&lt;project ID&gt;'</codeblock>
                                <p>Example: </p>
                                <codeblock>DROP SERIES FROM "cpu.user_perc" WHERE _tenant_id = '27620d7e'</codeblock>
                                <p/>
                            </li>
                            <!-- li>In order to avoid that the entire database becomes too large, you can, for example, create a backup, then drop the database and create a new, empty one: <p>
                                    <codeblock>DROP DATABASE mon</codeblock>
                                </p><p>
                                    <codeblock>CREATE DATABASE mon</codeblock>
                                </p></li -->
                        </ul>
                    </li>
                    <!-- li>
                        <p>Restart the <codeph>influxdb</codeph> service, for example, as follows: </p>
                        <codeblock>sudo systemctl restart influxdb</codeblock>
                    </li -->
                </ol>
            </p>
        </section>
    </conbody>
</concept>
