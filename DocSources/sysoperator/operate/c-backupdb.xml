<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright FUJITSU LIMITED 2017 -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>

<concept id="concept_E8D43EB4494E41D2AB42D4A89396D1AB"
                    xml:lang="en-us">
    <title>Databases</title>
    <conbody>
        <section>
                        <p>You need to create regular backups of the following databases on the host where the Monitoring Service is installed:</p>
                        <ul
                id="Elasticsearch_database_concept_conbody_section_1_ul">
                                <li>Elasticsearch database </li>
                                <li>InfluxDB database </li>
                                <li>MySQL database </li>
                        </ul>
                        <p
                id="It_is_recommended_that_backup_concept_conbody_section_1_p">It is recommended that backup and restore operations for databases are carried out by experienced operators only.</p>
                </section>
                <section>
                        <title>Elasticsearch Database</title>
                        <p
                id="For_backing_up_and_restoring_concept_conbody_section_2_p">For backing up and restoring your Elasticsearch database, you can use the Snapshot and Restore module of Elasticsearch.</p>
                        <p id="To_make_a_backup_of_the_datab_concept_conbody_section_2_p"
                                >To create a backup of the database, proceed as follows:</p>
                        <p/>
                        <p>alte LÃ¶sung:</p>
                        <p>
                                <ol>
                                        <li>
                                                <p>Specify a file system for backing up the Elasticsearch database in the <codeph>elasticsearch</codeph> section of the <codeph>group_vars/monasca_group</codeph> file. The file system you specify must later be used for backing up your Elasticsearch database. </p>
                                                <p>Example: </p>
                                                <codeblock>elasticsearch_repo_dir: -/mount/backup/elasticsearch1</codeblock>
                                        </li>
                                </ol>
                        </p>
                        <p/>
                        <p>NEU in env file</p>
                        <p/>
                        <p/>
                        <ol>
                                <li
                            id="Make_sure_that_concept_conbody_section_2_o">
                                        <p>Make sure that <codeph>curl</codeph> is installed. If this is not the case, download and install it, for example, from the following Web site: <xref
                            format="html"
                            href="http://curl.haxx.se/download.html"
                        scope="external"><u><i>http://curl.haxx.se/download.html</i></u></xref>.</p>
                                </li>
                                <li>Log in to the host where the Monitoring Service is installed.</li>
                                <li>
                                        <p>Create a snapshot repository.</p>
                                        <p>Example:</p>
                                        <codeblock>$ curl -XPUT http://localhost:9200/_snapshot/my_backup -d '{
  "type": "fs",
  "settings": {
       "location": "/mount/backup/elasticsearch1/my_backup",
       "compress": true
  }
}'</codeblock>
                                        <p
                        id="The_example_registers_a_share_concept_conbody_section_2_o">The example registers a shared file system repository (<codeph>"type": "fs"</codeph>) that uses the <codeph>/mount/backup/elasticsearch1</codeph> directory for storing snapshots. </p>
                                        <note othertype="note"
                                                        >The directory for storing snapshots must be specified as configured during the installation of the Monitoring Service in the <codeph>group_vars/monasca_group</codeph> file. The directory must be manually mounted before creating the snapshot. The <codeph>elasticsearch</codeph> user must be specified as the owner of the directory.</note>
                                        <p
                    id="compress_concept_conbody_section_2_o"><codeph>compress</codeph> is turned on to compress the metadata files.</p>
                                </li>
                                <li id="Check_whether_the_repository_concept_conbody_section_2_o">
                                        <p>Check whether the repository was created successfully.</p>
                                        <p>Example:</p>
                                        <codeblock>$ curl -XGET http://localhost:9200/_snapshot/my_backup</codeblock>
                                        <p>Example response for a successfully created repository:</p>
                                        <codeblock>{
  "my_backup": {
    "type": "fs",
    "settings": {
      "compress": "true",
      "location": "/mount/backup/elasticsearch1/my_backup"
    }
  }
}</codeblock>
                                </li>
                                <li id="Create_a_snapshot_of_your_dat_concept_conbody_section_2_o">
                                        <p>Create a snapshot of your database that contains all indices. A repository can contain multiple snapshots of the same database. The name of a snapshot must be unique within the snapshots created for your database.</p>
                                        <p>Example:</p>
                                        <codeblock>$ curl -XPUT http://localhost:9200/_snapshot/my_backup/snapshot_1?wait_for_completion=true</codeblock>
                                        <p>The example creates a snapshot named <codeph>snapshot_1</codeph> for all indices in the <codeph>my_backup</codeph> repository.</p>
                                </li>
                        </ol>
                        <p/>
                        <p/>
                        <ul>
                                <li><i>### started update ###</i></li>
                                <li>
                                        <p>Create a snapshot repository.</p>
                                        <p>Example:</p>
                                        <codeblock>$ curl -XPUT http://localhost:9200/_snapshot/my_backup -d '{
  "type": "fs",
  "settings": {
       "location": "<b><i>/mount/backup/elasticsearch1</i></b>/my_backup",
       "compress": true
  }
}'</codeblock>
                                        <p id="The_example_registers_a_share_concept_conbody_section_2_o"
                                                >The example registers a shared file system repository (<codeph>"type": "fs"</codeph>) that uses the <codeph><b><i>/mount/backup/elasticsearch1</i></b></codeph> directory for storing snapshots. </p>
                                        <note othertype="note"
                                                >The directory for storing snapshots must be specified as configured during the installation of the Monitoring Service in the <codeph>group_vars/monasca_group</codeph> file. The directory must be manually mounted before creating the snapshot. The <codeph>elasticsearch</codeph> user must be specified as the owner of the directory. ### The directory for storing snapshots is set by <codeph>default.path.repo</codeph> parameter in <codeph>log-pipeline.yml. This is fix !!! cannot be changed ###</codeph></note>
                                        <p
                                                id="compress_concept_conbody_section_2_o"><codeph>compress</codeph> is turned on to compress the metadata files.</p>
                                        <p>###old installation description## Specify a file system for backing up the Elasticsearch database in the <codeph>elasticsearch</codeph> section of the <codeph>group_vars/monasca_group</codeph> file. The file system you specify must  later be used for backing up your Elasticsearch database. </p>
                                        <p>##old## Example: </p>
                                        <codeblock>## old ## elasticsearch_repo_dir: -/mount/backup/elasticsearch1</codeblock>
                                </li>
                                <li><i>###ENDE </i></li>
                        </ul>
                        <p/>
                        <p/>
                        <p>To restore the database instance, proceed as follows:</p>
                        <ol id="Close_all_indices_of_your_dat_concept_conbody_section_2_o">
                                <li>
                                        <p>Close all indices of your database.</p>
                                        <p>Example:</p>
                                        <codeblock>$ curl -XPOST http://localhost:9200/_all/_close</codeblock>
                                </li>
                                <li>
                                        <p>Restore all indices from the snapshot you have created.</p>
                                        <p>Example:</p>
                                        <codeblock>$ curl -XPOST http://localhost:9200/_snapshot/my_backup/snapshot_1/_restore</codeblock>
                                        <p>The example restores all indices from <codeph>snapshot_1</codeph> that is stored in the <codeph>my_backup</codeph> repository.</p>
                                </li>
                        </ol>
                        <p id="For_additional_information_ba_concept_conbody_section_2_p"
                                        >For additional information on backing up and restoring an Elasticsearch database, refer to the <xref
                                        format="html"
                                        href="https://www.elastic.co/guide/en/elasticsearch/reference/2.3/modules-snapshots.html"
                                        scope="external"><u><i>Elasticsearch documentation</i></u></xref>.</p>
                </section>
                <section>
                        <title>InfluxDB Database</title>
                        <!-- p>For backing up and restoring your InfluxDB database, you can use the InfluxDB shell. The shell is part of your InfluxDB distribution. If you installed InfluxDB via a package manager, the shell is, by default, installed in the <codeph>/usr/bin</codeph> directory.</p -->
                        <p>To create a backup of the database, proceed as follows:</p>
                        <ol>
                                <li>
                                        <p>Log in to the <ph
                                                        conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                                                /> node.</p>
                                </li>
                                <li>
                                        <p>Go to the installation directory.</p>
                                        <p><i>##install dir is where the .env. and 2 docker-compose files are located. From where must the command in the next step be executed </i>?</p>
                                </li>
                                <li>
                                        <p>For backing up the InfluxDB database, it is required to mount a directory for synchronizing the meta data and a directory for storing the database backup file on your local machine.</p>
                                        <p>To mount the directories, execute the following command:</p>
                                        <codeblock>$ docker docker run --rm --detach 
  -v $INFLUXDB_META_DIR:&lt;meta_data_dir> 
  -v $INFLUXDB_BACKUPS:&lt;backup_dir>
influxdb:1.3.3-alpine</codeblock>
                                        <p>Replace <codeph>meta_data_dir</codeph> with the directory to be used for synchronizing the meta data, for example <codeph>/var/lib/influxdb</codeph>. </p>
                                        <p>Replace <codeph>backup_dir</codeph> with the directory to be used for storing the backup file, for example <codeph>/backup</codeph>. </p>
                                </li>
                                <li>
                                        <p>For backing up the InfluxDB database, you need the ID of the container in which the database is running:</p>
                                        <codeblock>$ docker ps | grep influxd</codeblock>
                                        <p>Example output with the container ID: </p>
                                        <codeblock>$ 07e9007e0be8        influxdb:1.3.3-alpine   "/entrypoint.sh in..."
3 seconds ago       Up 2 seconds 0.0.0.0:32779->8086/tcp   determined_goodall</codeblock>
                                </li>
                                <li>
                                        <p>Back up the database. To create the backup from your local machine, execute the following command:</p>
                                        <codeblock>$ docker exec &lt;container_id> influxd backup -database &lt;db_name> "&lt;backup_dir>/&lt;name>.backup"</codeblock>
                                        <p>Replace <codeph>container_id</codeph> with the ID of the container in which the database is running, <codeph>db_name</codeph> with the name of the database, <codeph>backup_dir</codeph> with the directory you have mounted for storing the backup file, and <codeph>name</codeph> with the name of the backup file to be created.</p>
                                        <p>The following example creates a backup of the <codeph>mon</codeph> database, running in container <codeph>07e9007e0be8</codeph>, in <codeph>/backup/mon.backup</codeph>.</p>
                                        <codeblock>$ docker exec 07e9007e0be8 influxd backup -database mon "/backup/mon.backup"</codeblock>
                                </li>
                        </ol>
                        <p>Before restoring the database, make sure that the container for the InfluxDB database is stopped.</p>
                        <p>To restore the database, you can then proceed as follows:</p>
                        <ol>
                                <li>
                                        <p>Restore the metastore to an ephemeral container.</p>
                                        <p>Example:</p>
                                        <codeblock>$  docker run --rm --detach -v $INFLUXDB_META_DIR:/var/lib/influxdb -v $INFLUXDB_BACKUPS:/backups 
-p 8086 influxdb:1.3.3-alpine -c "influxd restore -metadir /var/lib/influxdb/meta  -datadir 
/var/lib/influxdb/data -database mon /backups/mon.backup</codeblock>
                                        <p><i>##why do you speak of an "ephemeral" container here?</i></p>
                                </li>
                                <li>
                                        <p>Start the Docker container for the restored metastore.</p>
                                        <p>Example:</p>
                                        <codeblock>$ docker docker run --rm --detach -v $INFLUXDB_META_DIR:/var/lib/influxdb -v $INFLUXDB_BACKUPS:/backups 
influxdb:1.3.3-alpine</codeblock>
                                </li>
                        </ol>
                        <p><i>##Nothing to be added?</i></p>
                        <p><i>##This reference does not help with a containerized application##</i> For additional information on backing up and restoring an InfluxDB database, refer to the <xref
                                        format="html"
                                        href="https://docs.influxdata.com/influxdb/v1.1/administration/backup_and_restore/"
                                        scope="external"><u><i>InfluxDB documentation</i></u></xref>.</p>
                </section>
                <section>
                        <title>MySQL Database</title>
                        <p id="For_backing_up_and_restoring_concept_conbody_section_4_p"
                                        >For backing up and restoring your MySQL database, you can use the <codeph>mysqldump</codeph> utility program. <codeph>mysqldump</codeph> performs a logical backup that produces a set of SQL statements. These statements can later be executed to restore the database.</p>
                        <p>To back up your MySQL database, you must be the owner of the database or a user with superuser privileges. You can use the following command.</p>
                        <p>Example:</p>
                        <codeblock>$ mysqldump -u root -p mon &gt; dumpfile.sql</codeblock>
                        <p>In addition to the name of the database, you have to specify the name and the location where <codeph>mysqldump</codeph> stores its output.</p>
                        <p>To restore your MySQL database, proceed as follows:</p>
                        <ol>
                                <li>Log in to the host where the Monitoring Service is installed as a user with root privileges.</li>
                                <li>Go to the directory where the <ph
                            conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"/> installation package is located.<p>Example:</p><p>
                                                <codeblock>cd /opt/FJSVsvcmm</codeblock>
                                        </p></li>
                                <li>
                                        <p>Stop all agents and services: </p>
                                        <p>
                                                <codeblock>./services.sh stop</codeblock>
                                        </p>
                                </li>
                                <li>
                                        <p>Start the <codeph>mysql</codeph> service:</p>
                                        <codeblock>$ systemctl start mysql</codeblock>
                                </li>
                                <li id="Log_in_to_the_database_you_ha_concept_conbody_section_4_o">
                                        <p>Log in to the database you have backed up as a user with root privileges.</p>
                                        <p>Example:</p>
                                        <codeblock>$ mysql -u root -p mon</codeblock>
                                </li>
                                <li id="Remove_and_create_the_databas_concept_conbody_section_4_o">
                                        <p>Remove and create the database:</p>
                                        <codeblock>&gt; DROP DATABASE mon;
&gt; CREATE DATABASE mon;</codeblock>
                                </li>
                                <li id="Exit_concept_conbody_section_4_o">
                                        <p>Exit <codeph>mysql</codeph>:</p>
                                        <codeblock>&gt; \q</codeblock>
                                </li>
                                <li id="Restore_the_database._concept_conbody_section_4_o">
                                        <p>Restore the database.</p>
                                        <p>Example:</p>
                                        <codeblock>$ mysql -u root -p mon &lt; dumpfile.sql</codeblock>
                                </li>
                                <li>
                                        <p>Start all <ph
                    conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"/> agents and services:</p>
                                        <codeblock>./services.sh start</codeblock>
                                </li>
                        </ol>
                        <p id="For_additional_information_on_concept_conbody_section_4_p"
                                        >For additional information on backing up and restoring a MySQL database with <codeph>mysqldump</codeph>, refer to the ###updated## <xref
                                        format="html" href="https://mariadb.com/kb/en/mariadb/mysqldump/"
                                        scope="external"><u><i>MySQL documentation</i></u></xref>.</p>
                </section>
    </conbody>
</concept>
