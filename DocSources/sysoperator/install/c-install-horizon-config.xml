<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>
<!-- Copyright FUJITSU ENABLING SOFTWARE TECHNOLOGY GMBH 2018 -->
<concept id="concept_E8D43EB4494E41D2AB42D4A89396D1AB"
                xml:lang="en-us">
    <title>Configuration</title>
    <conbody>
        <section>
            <p>The following steps must be performed manually to enable access to the monitoring functionality in OpenStack Horizon:</p>
            <ol compact="no">
                <li>
                    <p>Define a group name for log paths in your <codeph>local_settings.py</codeph> file. The file is located in your plugin installation directory <codeph>&lt;monasca_ui_dir>/lib/python2.7/site-packages/ monitoring/config</codeph>.</p>
                    <p>The group name is required to indicate irregularities in your log data on the <uicontrol>Overview</uicontrol> page in OpenStack Horizon. Insert the group name in the <codeph>Service group name</codeph> section:</p>
                    <codeblock># Service group names (global across all projects): 
MONITORING_SERVICES_GROUPS = [ 
    {'name': _('OpenStack Services'), 'groupBy': 'service'}, 
    {'name': _('Servers'), 'groupBy': 'hostname'}, 
    {'name': _('Log Paths'), 'groupBy': 'path'} 
] </codeblock>
                </li>
                <li><p>In addition, specify the IP address of your <ph
                            conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                            /> node in your <codeph>local_settings.py</codeph> file:</p><codeblock>GRAFANA_URL = getattr(settings, 'GRAFANA_URL', {'&lt;region>':
 'http://&lt;grafana_host>:3000/grafana', })

ENABLE_KIBANA_BUTTON = getattr(settings, 'ENABLE_KIBANA_BUTTON', True)
KIBANA_POLICY_RULE = getattr(settings, 'KIBANA_POLICY_RULE',
 'monitoring:kibana_access')
KIBANA_POLICY_SCOPE = getattr(settings, 'KIBANA_POLICY_SCOPE',
 'monitoring')
KIBANA_HOST = getattr(settings, 'KIBANA_HOST',
 'http://&lt;kibana_host>:5601/')</codeblock><p>Replace <codeph>&lt;grafana_host></codeph> by the IP address of the <ph
                            conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                            /> node for the <codeph>GRAFANA_URL</codeph> parameter. Example URL: <codeph> http://192.168.10.6:3000/</codeph>. </p>Replace <codeph>&lt;region></codeph> by the name of your OpenStack region, for example <codeph>RegionOne</codeph>.<p>Replace <codeph>&lt;kibana_host></codeph> by the IP address of the <ph
                            conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                            /> node for the <codeph>KIBANA_HOST</codeph> parameter. Example URL: <codeph> http://192.168.10.6:5601/</codeph>. </p></li>
                <li>
                    <p>To handle HTTP proxy requests, the <codeph>mod_proxy</codeph> and <codeph>mod_proxy_http</codeph> modules must be enabled in Apache. Check whether they are already enabled in your environment:</p>
                    <codeblock>httpd -M</codeblock>
                    <p>If not yet enabled, add the following lines to the <codeph>httpd.conf</codeph> file. The file is located in the <codeph>/etc/httpd/conf/</codeph> directory.</p>
                    <codeblock>LoadModule  proxy_module      modules/mod_proxy.so
LoadModule  proxy_http_module modules/mod_proxy_http.so</codeblock>
                </li>
                <li>
                    <p>Configure a proxy path pointing to your Grafana instance for the VHost that hosts your OpenStack Horizon instance. </p>
                    <p>Add the following lines to the <codeph>&lt;VirtualHost *:80></codeph> element in the <codeph>15-horizon_vhost.conf</codeph> file. The file is located in the <codeph>etc/httpd/conf.d/</codeph> directory.</p>
                    <codeblock>ProxyPass "/grafana" "http://&lt;grafana_host>:3000"
ProxyPassReverse "/grafana" "http://&lt;grafana_host>:3000"</codeblock>
                    <p>Replace <codeph>&lt;grafana_host></codeph> by the IP address of the <ph
                            conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                            /> node. Example URL: <codeph> http://192.168.10.6:3000/</codeph>. </p>
                </li>
                <li>
                    <p>To integrate the Monitoring Service with the OpenStack Horizon service, create links pointing to the Horizon Plugin.</p>
                    <p>Example with <codeph>/opt/monasca-ui/</codeph> as plugin installation directory:</p>
                    <codeblock>ln -s /opt/monasca-ui/lib/python2.7/site-packages/
 monitoring/enabled/_50_admin_add_monitoring_panel.py \
/usr/share/openstack-dashboard/openstack_dashboard/
 local/enabled/_50_admin_add_monitoring_panel.py

ln -s /opt/monasca-ui/lib/python2.7/site-packages/
 monitoring/conf/monitoring_policy.json \
/etc/openstack-dashboard/monitoring_policy.json</codeblock>
                </li>
                <li>
                    <p>Append the virtual env libraries of the Horizon Plugin to the system path of the OpenStack Horizon service. For this purpose, two files must be edited. </p>
                    <p>Append the path where the plugin is installed to the <codeph>django.wsgi</codeph> file. The WSGI script of your OpenStack platform is located in the <codeph>/usr/share/openstack-dashboard/ openstack_dashboard/wsgi</codeph> directory.</p>
                    <p>Example of <codeph>django.wsgi</codeph> file with <codeph>/opt/monasca-ui/</codeph> as plugin installation directory:</p>
                    <codeblock>import logging
import os
import sys
sys.path.append("/opt/monasca-ui/lib/python2.7/site-packages")
from django.core.wsgi import get_wsgi_application
from django.conf import settings

# Add this file path to sys.path in order to import settings
sys.path.insert(0, os.path.join(os.path.dirname(os.path.realpath(__file__)), '../..'))
os.environ['DJANGO_SETTINGS_MODULE'] = 'openstack_dashboard.settings'
sys.stdout = sys.stderr

DEBUG = False

application = get_wsgi_application()</codeblock>
                    <p>Append the path where the plugin is installed to the <codeph>manage.py</codeph> file. The <codeph>manage.py</codeph> file is located in the <codeph>/usr/share/openstack-dashboard</codeph> directory.</p>
                    <p>Example of  <codeph>manage.py</codeph> file with <codeph>/opt/monasca-ui/</codeph> as plugin installation directory:</p>
                    <codeblock>import os
import sys

from django.core.management import execute_from_command_line  # noqa

if __name__ == "__main__":
    os.environ.setdefault("DJANGO_SETTINGS_MODULE",
                          "openstack_dashboard.settings")
    sys.path.append("/opt/monasca-ui/lib/python2.7/site-packages")
    execute_from_command_line(sys.argv)</codeblock>
                </li>
                <li>
                    <p>If it is required to provide the Japanese version of the Horizon plugin, make the following preparation. </p>
                    <p>Example with <codeph>/opt/monasca-ui/</codeph> as plugin installation directory:</p>
                    <codeblock>cd /opt/monasca-ui/lib/python2.7/site-packages/monitoring/
/opt/monasca-ui/lib/python2.7/site-packages/django/bin/django-admin.py compilemessages -l ja</codeblock>
                </li>
                <li>
                    <p>Restart the server on which the OpenStack Horizon service is running.</p>
                    <p>Example: </p>
                    <codeblock>systemctl restart httpd</codeblock>
                </li>
            </ol>
        </section>
    </conbody>
</concept>
