<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright FUJITSU LIMITED 2017 -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>

<concept id="concept_E8D43EB4494E41D2AB42D4A89396D1AB"
                    xml:lang="en-us">
    <title>Installation</title>
    <conbody>
        <section>
            <p>To install a Log Agent, proceed as follows:</p>
            <ol compact="no">
                <li>
                    <p>Log in to the Control Machine.</p>
                </li>
                <li>
                    <p>Open the configuration file of the Control Machine with your favorite editor. </p>
                    <p>Example:</p>
                    <codeblock>sudo vim /etc/ansible/hosts</codeblock>
                </li>
                <li>
                    <p>Configure the hosts on which you want to install the agent. For this purpose, check the following section in the configuration file:</p>
                    <codeblock># Monasca Log Agent Nodes for Cluster
monasca-log-agent-node-1   ansible_ssh_host={{ex_node_1_host}} ansible_ssh_user={{ssh_user_ex_node_1}}
monasca-log-agent-node-2   ansible_ssh_host={{ex_node_2_host}} ansible_ssh_user={{ssh_user_ex_node_2}}
monasca-log-agent-node-3   ansible_ssh_host={{ex_node_3_host}} ansible_ssh_user={{ssh_user_ex_node_3}}</codeblock>
                    <p>If required, you can add a line for installing an additional agent on a different host. The installer allows you to install one or multiple instances of an agent at a time. </p>
                    <p>When adding a line for an additional agent, you have to specify a unique alias for the host machine on which to install the agent. In addition, you have to add the agent in the <codeph>[monasca_log_agent_group]</codeph> section:</p>
                    <codeblock>[monasca_log_agent_group] 
monasca-log-agent-node-1 
monasca-log-agent-node-2 
monasca-log-agent-node-3</codeblock>
                </li>
                <li>
                    <p>Replace <codeph>{{ex_node_*_host}}</codeph> with the IP address of the remote machine on which to install the agent.</p>
                    <note othertype="note"><ph conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                        /> supports and has been tested with IPv4. IPv6 and FQDN are not supported.</note>
                    <p> Replace <codeph>{{ssh_user_ex_node_*}}</codeph> with the user name of the user who is to install the agent.</p>
                    <note othertype="note"
                        >The user who installs the agent must have access to the machine on which the agent is to be installed. Access as a user with root privileges is required. </note>
                    <p>Check that you have removed all curly brackets with your replacements.</p>
                </li>
                <li>
                    <p>To establish the connection between the Control Machine and the remote machine, generate the SSH key for Ansible. </p>
                    <p>Execute the following command:</p>
                    <p>
                        <codeblock>ssh-keygen -t rsa</codeblock>
                    </p>
                </li>
                <li>
                    <p>To copy the SSH key to a remote machine, execute the following command. Repeat the command for each remote machine on which to install an agent. </p>
                    <codeblock>ssh-copy-id &lt;user_name&gt;@&lt;host_ip_address&gt;</codeblock>
                    <p>Replace <codeph>&lt;user_name&gt;</codeph> by the user name to be used for accessing the remote machine, and replace <codeph>&lt;host_ip_address&gt;</codeph> by the IP address of the remote machine.</p>
                    <p>Example response for a successful connection to a remote machine:</p>
                    <codeblock>/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
&lt;user_name&gt;@&lt;host_ip_address&gt;'s password:

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh '&lt;user_name&gt;@&lt;host_ip_address&gt;'"
and check to make sure that only the key(s) you wanted were added.</codeblock>
                </li>
                <li>
                    <p>Create a configuration file for each agent. An individual configuration file is required for each agent instance that is to be installed. </p>
                    <p>Execute the following command to create a configuration file. Repeat the command for all host machines on which to install an agent.</p>
                    <codeblock>sudo vim /opt/FJSVsvcmm/host_vars/&lt;file_name&gt;</codeblock>
                    <p>Replace <codeph>&lt;file_name&gt;</codeph> with the alias for the host machine. <codeph>&lt;file_name&gt;</codeph> must be identical to the alias specified in the configuration file of the Control Machine (see Step 3 above).</p>
                </li>
                <li>
                    <p>Configure the agents. The following example shows the minimum set of parameters that must be configured to start an agent. The minimum set is restricted to the credentials of an OpenStack user used for the communication between the Monitoring Service and the agent.</p>
                    <p>You can specify additional configuration settings, if required. For details on the configuration settings, refer to <xref
                            href="../../shared/appendix/r-confsettings-logs.xml"/>.</p>
                    <p>To define the minimum set of parameters, insert the following content into each configuration file. Replace the user credentials with the credentials of a valid OpenStack user who is authorized to send monitoring data to the Monitoring Service. Contact your OpenStack operator. He is responsible for creating the required users and roles.</p>
                    <p>Example:</p>
                    <codeblock># file: host_vars/monasca-log-agent

# logstash monasca user credentials
monasca_log_agent_project: monasca
monasca_log_agent_user: monasca-agent
monasca_log_agent_password: "{{ keystone_monasca_agent_password }}"
user_domain_name: default
project_domain_name: default</codeblock>
                    <note othertype="note"
                            >The installation automatically configures the agent so that a minimum set of log data can be retrieved. For information on how to update this set of log data, refer to <xref
                            href="../../shared/install/c-configurelogagent.xml"/>.</note>
                </li>
                <li>Provide the passwords required for installing an agent. They are defined in the <codeph>credentials.yml</codeph> file that is located in the <codeph>/opt/FJSVsvcmm</codeph> directory.<p>Open the <codeph>credentials.yml</codeph> file with your favorite editor. </p><p>Example:</p><codeblock>sudo vim /opt/FJSVsvcmm/credentials.yml</codeblock></li>
                <li>
                    <p>Specify the following passwords in the file:</p>
                    <ul>
                        <li>
                            <p><codeph>keystone_monasca_agent_password</codeph> for Keystone access of the user used for configuration purposes of the agents on the <ph
                                    conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                                /> hosts. The user account is automatically created with the installation.</p>
                        </li>
                        <li>
                            <p><codeph>keystone_admin_agent_password</codeph> for Keystone access of the user used for configuration purposes of the agents on the OpenStack hosts. The user account is automatically created with the installation.</p>
                        </li>
                    </ul>
                </li>
                <!-- li>
                    <p>If you use HTTPS for communication between your agents and the Log API as well as between your agents and the OpenStack Keystone service, you can add communication parameters to your configuration. They must be defined as group variables in the <codeph>monasca_log_agent_group</codeph> file.</p>
                    <p>Open the file with your favorite editor.</p>
                    <p>Example:</p>
                    <codeblock>sudo vim /opt/FJSVsvcmm/group_vars/monasca_log_agent_group</codeblock>
                </li -->
                <!-- li>
                    <p>Add the  <codeph>monasca_log_api_insecure</codeph> parameter and the <codeph>keystone_api_insecure</codeph> parameter.</p>
                    <p>Example: </p>
                    <codeblock>monasca_log_api_insecure: false
keystone_api_insecure: false </codeblock>
                    <p>By default, both parameters are set to <codeph>false</codeph>. This means that HTTPS communication can be used only in case your security certificate is recognized as trusted. You can set the parameters to <codeph>true</codeph> if you want to use HTTPS without a valid security certificate. </p>
                </li -->
                <li>
                    <p>To run the installer, execute the following command:</p>
                    <codeblock>ansible-playbook /opt/FJSVsvcmm/monasca-log-agent.yml</codeblock>
                    <p>The following response is displayed if the installation is successful.</p>
                    <p>Example: </p>
                    <codeblock>PLAY RECAP ********************************************************
monasca-log-agent  :  ok=40   changed=23   unreachable=0   failed=0</codeblock>
                    <note othertype="note"
                        >There are checks performed during installation that may result in failures or warnings. These failures and warnings are reported but they do not block the installation. It is only this final message that is relevant for a successful installation.</note>
                </li>
            </ol>
            <p>In case the installation fails, check your configuration settings and passwords and retry the installation in verbose mode. To collect debug information, you can execute the following command:</p>
            <codeblock>ansible-playbook -vvvv /opt/FJSVsvcmm/monasca-log-agent.yml</codeblock>
            <p>The agents are installed, configured, and automatically started after a successful installation. The installer creates a startup script that automatically starts the agent when the machine is booted.</p>
            <p>An agent is provided as a LINUX service.</p>
        </section>
    </conbody>
</concept>
